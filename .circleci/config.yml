version: 2.1
orbs:
  slack: circleci/slack@4.12.1
  aws-cli: circleci/aws-cli@3.1.4

commands:
  install_awscli:
    description: Install AWS CLI v2
    steps:
      - run:
          name: Install AWS CLI v2
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
  install_terraform:
    description: install Terraform
    steps:
      - run:
          name: install terraform
          command: |
            wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
            echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
            sudo apt update && sudo apt install terraform
    install_kubectl:
      description: install kubectl for kubernetes
      steps:
        -run:
          name: install kubectl
          command: |
            sudo apt-get update
            sudo apt-get install -y ca-certificates curl
            sudo apt-get install -y apt-transport-https
            sudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
            echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
            sudo apt-get update
            sudo apt-get install -y kubectl
            kubectl version --client --output=yaml
jobs:
  build-docker-image:
    docker:
      - image: ubuntu-2204:2023.02.1
    steps:
      - run:
          name: install docker
          command: |
            sudo apt update
            sudo apt install docker.io -y
            cd ./kubernetes/webapp/app
            docker build -t $DOCKER_IMAGE .
            docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
            docker push $DOCKER_IMAGE
  create-and-run-eks-cluster:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Debian Frontend
          command: |
            export DEBIAN_FRONTEND=noninteractive
      - install_awscli
      - install_terraform

      - run:
          name: terraform create eks cluster
          command: |
            cd ./terraform
            terraform init
            terraform apply --auto-approve
            terraform apply --auto-approve
      - run:
          name: update the local kubeconfig file
          command: |
            aws eks update-kubeconfig --name --region us-east-1
      - install_kubectl
      - run: 
          name: deploy webapp to eks cluster
          command: |
            cd /webapp/kubernetes
            kubectl apply -f secret.yaml
            kubectl apply -f complete-webapp.yaml; kubectl apply -f webapp-ingress.yaml; webapp-ssl.yaml
            sleep 10

      - run: 
          name: deploy sock shop app
          command: |
            cd /microservices-sock-shop-app
            kubectl apply -f complete-demo.yaml; kubectl apply -f frontend-ingress.yaml; kubectl apply sock-shop-ingress.yaml; kubectl apply -f sock-shop-ssl.yaml

      - run: 
          name: deploy additional dependencies
          command: |
            cd /kubernetes
            kubectl apply -f secret-route53.yaml; kubectl apply -f issuer-prod.yaml; kubectl apply -f issuer-staging.yaml
            kubectl apply -f prometheus-ingress.yaml; kubectl apply -f loki-ingress.yaml

workflows:
  defaults:
    jobs:
      - build-docker-image
      - create-eks-cluster:
          requires: [build-docker-image]